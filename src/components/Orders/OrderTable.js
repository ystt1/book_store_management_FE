// src/components/Orders/OrderTable.js
import React from 'react';
import styles from './OrderTable.module.css';
import Select from 'react-select'; // D√πng ƒë·ªÉ thay ƒë·ªïi tr·∫°ng th√°i nhanh

const OrderTable = ({
    orders,
    onViewDetails,
    onEditOrder,
    onDeleteOrder,
    onUpdateStatus,
    orderStatusOptions // M·∫£ng c√°c t√πy ch·ªçn tr·∫°ng th√°i
}) => {

    const getStatusLabel = (statusValue) => {
        const option = orderStatusOptions.find(opt => opt.value === statusValue);
        return option ? option.label : statusValue;
    };

    const getStatusColor = (statusValue) => {
        // Tr·∫£ v·ªÅ class m√†u d·ª±a tr√™n tr·∫°ng th√°i
        switch (statusValue) {
            case 'pending': return styles.statusPending;
            case 'processing': return styles.statusProcessing;
            case 'shipped': return styles.statusShipped;
            case 'completed': return styles.statusCompleted;
            case 'cancelled': return styles.statusCancelled;
            case 'refunded': return styles.statusRefunded;
            default: return '';
        }
    };


    return (
        <div className={styles.tableContainer}>
            <table className={styles.orderTable}>
                <thead>
                    <tr>
                        <th>M√£ ƒêH</th>
                        <th>Kh√°ch H√†ng</th>
                        <th>Ng√†y T·∫°o</th>
                        <th>T·ªïng Ti·ªÅn</th>
                        <th>Tr·∫°ng Th√°i</th>
                        <th>Ng∆∞·ªùi T·∫°o</th>
                        <th>H√†nh ƒê·ªông</th>
                    </tr>
                </thead>
                <tbody>
                    {orders && orders.length > 0 ? (
                        orders.map(order => (
                            <tr key={order.id}>
                                <td data-label="M√£ ƒêH:" className={styles.orderIdCell} onClick={() => onViewDetails(order)}>
                                    {order.id}
                                </td>
                                <td data-label="Kh√°ch H√†ng:">{order.customer_name || 'N/A'}</td>
                                <td data-label="Ng√†y T·∫°o:">
                                    {new Date(order.order_date).toLocaleDateString('vi-VN')} <br/>
                                    <span className={styles.timePart}>{new Date(order.order_date).toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit'})}</span>
                                </td>
                                <td data-label="T·ªïng Ti·ªÅn:" className={styles.amountCell}>
                                    {order.total_amount?.toLocaleString('vi-VN')} VNƒê
                                </td>
                                <td data-label="Tr·∫°ng Th√°i:" className={styles.statusCell}>
                                    {/* T√πy ch·ªçn: Hi·ªÉn th·ªã Select ƒë·ªÉ ƒë·ªïi nhanh tr·∫°ng th√°i */}
                                    {onUpdateStatus ? (
                                        <Select
                                            options={orderStatusOptions}
                                            value={orderStatusOptions.find(opt => opt.value === order.status)}
                                            onChange={(selectedOption) => onUpdateStatus(order.id, selectedOption.value)}
                                            className={`${styles.statusSelect} react-select-container-table`}
                                            classNamePrefix="react-select-table"
                                            menuPlacement="auto" // ƒê·ªÉ menu kh√¥ng b·ªã c·∫Øt
                                            styles={{ // Custom style cho Select nh·ªè h∆°n
                                                control: (base) => ({
                                                    ...base,
                                                    minHeight: '30px',
                                                    height: '30px',
                                                    fontSize: '0.85rem',
                                                }),
                                                valueContainer: (base) => ({
                                                    ...base,
                                                    height: '30px',
                                                    padding: '0 6px'
                                                }),
                                                input: (base) => ({
                                                    ...base,
                                                    margin: '0px',
                                                }),
                                                indicatorSeparator: () => ({
                                                    display: 'none',
                                                }),
                                                indicatorsContainer: (base) => ({
                                                    ...base,
                                                    height: '30px',
                                                }),
                                                option: (base, state) => ({
                                                    ...base,
                                                    fontSize: '0.85rem',
                                                    padding: '6px 10px',
                                                    backgroundColor: state.isSelected ? '#007bff' : (state.isFocused ? '#e9ecef' : base.backgroundColor),
                                                    color: state.isSelected ? 'white' : base.color,
                                                }),
                                                singleValue: (base) => ({ // Style cho text tr·∫°ng th√°i hi·ªÉn th·ªã
                                                    ...base,
                                                    color: '#333' // Ho·∫∑c m√†u d·ª±a tr√™n getStatusColor(order.status) n·∫øu mu·ªën
                                                })
                                            }}
                                        />
                                    ) : (
                                        <span className={`${styles.statusBadge} ${getStatusColor(order.status)}`}>
                                            {getStatusLabel(order.status)}
                                        </span>
                                    )}
                                </td>
                                <td data-label="Ng∆∞·ªùi T·∫°o:">{order.created_by || 'N/A'}</td>
                                <td data-label="H√†nh ƒê·ªông:" className={styles.actionsCell}>
                                    <button onClick={() => onViewDetails(order)} className={`${styles.btnAction} ${styles.btnView}`} title="Xem chi ti·∫øt">üëÅÔ∏è</button>
                                    {/* Ch·ªâ cho ph√©p s·ª≠a ƒë∆°n h√†ng ·ªü m·ªôt s·ªë tr·∫°ng th√°i nh·∫•t ƒë·ªãnh, v√≠ d·ª• 'pending' */}
                                    {(order.status === 'pending' || order.status === 'processing') && onEditOrder && (
                                        <button onClick={() => onEditOrder(order)} className={`${styles.btnAction} ${styles.btnEdit}`} title="S·ª≠a ƒë∆°n h√†ng">‚úèÔ∏è</button>
                                    )}
                                    {/* Ch·ªâ cho ph√©p x√≥a/h·ªßy ƒë∆°n h√†ng ·ªü m·ªôt s·ªë tr·∫°ng th√°i */}
                                    {(order.status === 'pending' || order.status === 'processing') && onDeleteOrder && (
                                        <button onClick={() => onDeleteOrder(order.id)} className={`${styles.btnAction} ${styles.btnDelete}`} title="H·ªßy/X√≥a ƒë∆°n h√†ng">üóëÔ∏è</button>
                                    )}
                                </td>
                            </tr>
                        ))
                    ) : (
                        <tr>
                            <td colSpan="7" className={styles.noResults}>Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</td>
                        </tr>
                    )}
                </tbody>
            </table>
        </div>
    );
};

export default OrderTable;