// src/components/Stationery/StationeryTable.js
import React from 'react';
import styles from './StationeryTable.module.css';

const StationeryTable = ({ stationeryItems, onEdit, onDelete, onViewDetails }) => {
    return (
        <div className={styles.tableContainer}>
            <table className={styles.stationeryTable}>
                <thead>
                    <tr>
                        <th>M√£ VPP</th>
                        <th>T√™n VƒÉn Ph√≤ng Ph·∫©m</th>
                        <th>M√¥ t·∫£</th>
                        <th>ƒê∆°n gi√°</th>
                        <th>SL T·ªìn</th>
                        <th>Nh√† Cung C·∫•p</th>
                        {/* <th>Ng√†y t·∫°o</th> */}
                        <th>H√†nh ƒê·ªông</th>
                    </tr>
                </thead>
                <tbody>
                    {stationeryItems && stationeryItems.length > 0 ? (
                        stationeryItems.map(item => (
                            <tr key={item.id}>
                                <td data-label="M√£ VPP:">{item.id}</td>
                                <td data-label="T√™n VPP:" className={styles.itemName} onClick={() => onViewDetails && onViewDetails(item)}>
                                    {item.name}
                                </td>
                                <td data-label="M√¥ t·∫£:" className={styles.descriptionCell}>{item.description || 'N/A'}</td>
                                <td data-label="ƒê∆°n gi√°:" className={styles.priceCell}>{item.price?.toLocaleString('vi-VN')} VNƒê</td>
                                <td data-label="SL T·ªìn:" className={styles.stockCell}>{item.stock_quantity}</td>
                                <td data-label="NCC:">{item.supplier_name || item.supplier_id || 'N/A'}</td>
                                {/* <td data-label="Ng√†y t·∫°o:">{item.created_at ? new Date(item.created_at).toLocaleDateString('vi-VN') : 'N/A'}</td> */}
                                <td data-label="H√†nh ƒë·ªông:" className={styles.actionsCell}>
                                    {onViewDetails && <button onClick={() => onViewDetails(item)} className={`${styles.btnAction} ${styles.btnView}`} title="Xem chi ti·∫øt">üëÅÔ∏è</button>}
                                    <button onClick={() => onEdit(item)} className={`${styles.btnAction} ${styles.btnEdit}`} title="S·ª≠a">‚úèÔ∏è</button>
                                    <button onClick={() => onDelete(item.id)} className={`${styles.btnAction} ${styles.btnDelete}`} title="X√≥a">üóëÔ∏è</button>
                                </td>
                            </tr>
                        ))
                    ) : (
                        <tr>
                            <td colSpan="7" className={styles.noResults}>Kh√¥ng c√≥ vƒÉn ph√≤ng ph·∫©m n√†o.</td>
                        </tr>
                    )}
                </tbody>
            </table>
        </div>
    );
};

export default StationeryTable;