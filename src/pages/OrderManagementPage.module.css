.advancedFilterBar .filterGrid {
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); /* Điều chỉnh cho filter đơn hàng */
}

/* src/pages/AttributeManagementPage.module.css */
.pageContainer {
    padding: 24px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.pageHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
}

.pageHeader h1 {
    margin: 0;
    font-size: 24px;
    font-weight: 600;
}

.tableHeader {
    margin-bottom: 16px;
}

.btn {
    padding: 8px 16px;
    border-radius: 6px;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    font-weight: 500;
}

.btnPrimary {
    background-color: #1890ff;
    color: white;
}

.btnPrimary:hover {
    background-color: #40a9ff;
}

.loadingOverlay {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 40px;
}

.loader {
    border: 3px solid #f3f3f3;
    border-radius: 50%;
    border-top: 3px solid #1890ff;
    width: 24px;
    height: 24px;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.errorBanner {
    background-color: #fff2f0;
    border: 1px solid #ffccc7;
    color: #ff4d4f;
    padding: 12px;
    border-radius: 4px;
    margin-bottom: 16px;
}

.noResultsContainer {
    text-align: center;
    padding: 40px;
}

.noResults {
    color: #8c8c8c;
    font-size: 16px;
}

/* Filter styles */
:global(.ant-form-item) {
    margin-bottom: 16px;
}

:global(.ant-input-number) {
    width: 100%;
}

:global(.ant-picker) {
    width: 100%;
}

:global(.ant-space) {
    width: 100%;
}

:global(.ant-card) {
    margin-bottom: 24px;
}

/* Responsive styles */
@media (max-width: 768px) {
    .pageContainer {
        padding: 16px;
    }

    .pageHeader {
        flex-direction: column;
        align-items: flex-start;
        gap: 16px;
    }

    .pageHeader h1 {
        font-size: 20px;
    }
}

.tabContainer {
    margin-bottom: 25px;
    border-bottom: 2px solid #dee2e6;
}

.tabButton {
    padding: 12px 20px;
    cursor: pointer;
    border: none;
    background-color: transparent;
    font-size: 1rem;
    color: #495057;
    margin-right: 5px; /* Khoảng cách giữa các tab */
    border-bottom: 2px solid transparent; /* Đường gạch dưới mặc định */
    transition: color 0.2s, border-bottom-color 0.2s;
}

.tabButton.active {
    color: #007bff;
    font-weight: 600;
    border-bottom-color: #007bff; /* Đường gạch dưới cho tab active */
}

.tabButton:hover:not(.active) {
    color: #0056b3;
}

.tabContent {
    /* Style cho nội dung của tab nếu cần */
}

.contentHeader { /* Header cho mỗi tab (ví dụ: tên tab và nút thêm) */
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
}
.contentHeader h2 {
    margin: 0;
    font-size: 1.5rem;
    color: #495057;
}

/* ... (các style đã có) ... */

.contentHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px; /* Tăng margin */
}
.contentHeader h2 {
    margin: 0;
    font-size: 1.5rem;
    color: #495057;
}

.headerActions { /* Wrapper cho tìm kiếm và nút thêm */
    display: flex;
    align-items: center;
    gap: 15px;
}
.controlsBar {
    display: flex;
    justify-content: space-between; /* Tạm thời bỏ để xem cách chúng tự sắp xếp */
    align-items: center;
    margin-bottom: 25px;
    gap: 15px; /* Thêm gap để có khoảng cách giữa chúng */
}

.searchWrapper {
    position: relative;
    /* flex-grow: 1; Có thể không cần nếu muốn nút Thêm ở sát bên */
}

.searchIcon {
    position: absolute;
    left: 10px;
    top: 50%;
    transform: translateY(-50%);
    color: #aaa;
    font-size: 0.9rem;
}

.searchInput {
    padding: 9px 12px 9px 30px; /* Điều chỉnh padding */
    border: 1px solid #ced4da;
    border-radius: 5px;
    font-size: 0.9rem;
    min-width: 250px; /* Độ rộng tối thiểu cho ô tìm kiếm */
}
.searchInput:focus {
    outline: none;
    border-color: #80bdff;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
}

.btnToggleFilter {
    padding: 10px 15px;
    background-color: #f8f9fa; /* Màu nền sáng hơn */
    color: #495057; /* Màu text tối hơn */
    border: 1px solid #ced4da; /* Thêm border */
    border-radius: 5px; /* Bo tròn vừa phải */
    display: inline-flex;
    align-items: center;
    gap: 8px;
    flex-shrink: 0;
    transition: background-color 0.2s, border-color 0.2s;
}
.btnToggleFilter:hover {
    background-color: #e9ecef;
    border-color: #adb5bd;
}
.btnToggleFilter svg { /* Style cho icon chevron */
    transition: transform 0.3s ease;
}
/* Không cần xoay icon nữa nếu text nút thay đổi */

.advancedFilterBar {
    background-color: #fdfdff; /* Màu nền hơi khác một chút */
    padding: 0px; /* Sẽ thêm padding khi mở */
    border-radius: 6px;
    margin-bottom: 25px;
    border: 1px solid #e9ecef;
    box-shadow: 0 1px 3px rgba(0,0,0,0.04);
    overflow: hidden; /* Quan trọng cho transition max-height */
    max-height: 0; /* Mặc định ẩn */
    opacity: 0; /* Mặc định ẩn */
    transition: max-height 0.4s ease-in-out, opacity 0.3s ease-in-out 0.1s, padding 0.4s ease-in-out, margin-bottom 0.4s ease-in-out;
}

.advancedFilterBar.open { /* Class để mở rộng */
    max-height: 500px; /* Chiều cao đủ lớn để chứa nội dung */
    opacity: 1;
    padding: 20px;
    margin-bottom: 25px; /* Giữ lại margin khi mở */
}

.advancedFilterTitle {
    font-size: 1.1rem;
    color: #343a40;
    margin-top: 0;
    margin-bottom: 15px;
    padding-bottom: 10px;
    border-bottom: 1px solid #e0e0e0;
}

.filterGrid {
    display: grid;
    /* grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); */
    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr)); /* Sử dụng auto-fill để linh hoạt hơn */
    gap: 15px 20px; /* row-gap column-gap */
}

.filterControl {
    width: 100%;
    padding: 9px 12px; /* Đồng nhất padding */
    border: 1px solid #ced4da;
    border-radius: 4px; /* Bo tròn nhẹ */
    font-size: 0.9rem;
    box-sizing: border-box;
}

.searchWrapper {
    position: relative;
    flex-grow: 1; 
}

.searchIcon {
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: #aaa;
    font-size: 0.9rem;
}

.mainSearchInput {
    width: 100%;
    padding: 10px 15px 10px 35px;
    border: 1px solid #ced4da;
    border-radius: 20px;
    font-size: 1rem;
    box-sizing: border-box;
}
.mainSearchInput:focus {
    outline: none;
    border-color: #80bdff;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
}

.mainFilterControls {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 20px;
}

/* Filter Section Styles */
.filterSection {
    background: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
}

.searchBar {
    display: flex;
    gap: 10px;
    margin-bottom: 15px;
}

.searchInput {
    flex: 1;
    padding: 10px 15px;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 0.95rem;
    transition: border-color 0.2s;
}

.searchInput:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

.searchButton {
    padding: 10px 20px;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.searchButton:hover {
    background: #0056b3;
}

.filterControls {
    display: flex;
    gap: 10px;
    margin-bottom: 15px;
}

.filterToggle,
.resetButton {
    padding: 8px 15px;
    border: 1px solid #ddd;
    border-radius: 6px;
    background: white;
    cursor: pointer;
    transition: all 0.2s;
    font-size: 0.9rem;
}

.filterToggle:hover,
.resetButton:hover {
    background: #f8f9fa;
    border-color: #007bff;
    color: #007bff;
}

.filterPanel {
    background: #f8f9fa;
    padding: 20px;
    border-radius: 6px;
    margin-top: 15px;
}

.filterGroup {
    margin-bottom: 15px;
}

.filterGroup:last-child {
    margin-bottom: 0;
}

.filterGroup label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #333;
}

.filterSelect {
    width: 100%;
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 0.95rem;
    background: white;
}

.amountFilter {
    display: flex;
    gap: 10px;
    align-items: center;
}

.amountInput {
    flex: 1;
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 0.95rem;
}

.amountInput:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

.applyButton {
    padding: 8px 15px;
    background: #28a745;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.applyButton:hover {
    background: #218838;
}

.datePicker {
    width: 100%;
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 0.95rem;
    background: white;
}

/* Responsive styles */
@media screen and (max-width: 768px) {
    .filterSection {
        padding: 15px;
    }

    .searchBar {
        flex-direction: column;
    }

    .filterControls {
        flex-direction: column;
    }

    .amountFilter {
        flex-direction: column;
    }

    .applyButton {
        width: 100%;
    }
}

/* Statistics Section */
.statsSection {
    margin-bottom: 24px;
}

.statsSection :global(.ant-card) {
    height: 100%;
    transition: all 0.3s ease;
}

.statsSection :global(.ant-card:hover) {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
}

.statsSection :global(.ant-statistic-title) {
    font-size: 14px;
    color: #8c8c8c;
    margin-bottom: 8px;
}

.statsSection :global(.ant-statistic-content) {
    font-size: 24px;
    font-weight: 600;
}

.statsSection :global(.ant-statistic-content-prefix) {
    margin-right: 8px;
}

.filterActions {
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    height: 100%;
}

/* Responsive styles */
@media (max-width: 768px) {
    .filterActions {
        justify-content: flex-start;
    }
}